<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freeshadowrocket.github.io/news/article-48365.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Hadoop：MR以parquet格式保存文件</title>
        <meta name="description" content="需求 此前公司用MR程序解析json，将结果以text file保存在hive表的目录下。随着数据量增大，text file的性能逐渐跟不上，需要修改代码将文件格式修改成parquet。 实现 以下是" />
        <link rel="icon" href="/assets/website/img/freeshadowrocket/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeShadowrocket免费机场官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freeshadowrocket.github.io/news/article-48365.htm" />
    <meta property="og:site_name" content="FreeShadowrocket免费机场官网" />
    <meta property="og:title" content="Hadoop：MR以parquet格式保存文件" />
    <meta property="og:image" content="https://freeshadowrocket.github.io/uploads/20240808/7d0be8a96d9c222e4064fdcc3ac9db44.webp" />
        <meta property="og:release_date" content="2025-01-30T06:45:08" />
    <meta property="og:updated_time" content="2025-01-30T06:45:08" />
        <meta property="og:description" content="需求 此前公司用MR程序解析json，将结果以text file保存在hive表的目录下。随着数据量增大，text file的性能逐渐跟不上，需要修改代码将文件格式修改成parquet。 实现 以下是" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Hadoop：MR以parquet格式保存文件">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Montserrat:300,400,500,600,700" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/freeshadowrocket/aos/aos.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freeshadowrocket/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freeshadowrocket/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freeshadowrocket/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/freeshadowrocket/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/freeshadowrocket/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-8M2D9T3E49"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-8M2D9T3E49');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top d-flex align-items-center header-transparent">
        <div class="container d-flex align-items-center">
            <a href="/">
                        <span class="logo me-auto">Free Shadowrocket</span>
                        </a>
            <!-- Uncomment below if you prefer to use an image logo -->
            <!-- <a href="index.html" class="logo me-auto"><img src="/assets/website/img/freeshadowrocket/logo.png" alt="" class="img-fluid"></a>-->
            <nav id="navbar" class="navbar order-last order-lg-0">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/client.htm">客户端</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                    </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <ol>
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">新闻资讯</a></li>
                    <li>正文</li>
                </ol>
                <h1>Hadoop：MR以parquet格式保存文件</h1>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= Features Section ======= -->
        <section id="features" class="features">
            <div class="container" data-aos="fade-up">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <h2>需求</h2> <p>此前公司用MR程序解析json，将结果以text file保存在hive表的目录下。随着数据量增大，text file的性能逐渐跟不上，需要修改代码将文件格式修改成parquet。</p> <h2>实现</h2> <p>以下是以parquet保存结果的demo。</p> <p>将文本中的每行以空格分隔，第一列作为id（int），第二列作为name（string），直接保存到指定目录。</p> <pre><code class="language-bash">[root@kudu1 job]# cat test.txt  1 xiaoming 2 hanmeimei 3 kangkang 4 maria 5 yokiko 6 michael</code></pre> <p>以下代码只有map程序，没有reduce。以parquet格式输出步骤为：</p> <h3>1. 创建parquet的schema信息</h3> <p>parquet的数据类型有INT64, INT32, BOOLEAN, BINARY, FLOAT, DOUBLE, INT96, FIXED_LEN_BYTE_ARRAY,其中INT64对标Java的Long；INT32对标int；BINARY对标String，但是需要指定编码格式。</p> <pre><code class="language-java">        String writeSchema = "message example {\n optional INT32 id;\n optional binary name (UTF8);\n}";</code></pre> <h3>2. 使用ExampleOutputFormat类配置parquet的schema、压缩格式、输出目录。</h3> <pre><code class="language-java">        // 配置MR的configuration         Configuration configuration = new Configuration(this.getConf());         configuration.set("mapreduce.input.fileinputformat.split.minsize","2147483648");         configuration.set("parquet.example.schema",writeSchema);</code></pre> <h3>3. 配置map的value输出格式为org.apache.parquet.example.data.Group。</h3> <p>parquet是列式存储，不同列的同一行表示为一个group。可以理解为一行就是一个group。每次map都是以group格式写入parquet文件的。</p> <pre><code class="language-java">        job.setMapOutputValueClass(Group.class);//TODO 设置value是parquet的Group</code></pre> <h3>4. 配置job的输出格式</h3> <pre><code class="language-java">        LazyOutputFormat.setOutputFormatClass(job, ExampleOutputFormat.class);         MultipleOutputs.addNamedOutput(job, "output", ExampleOutputFormat.class, NullWritable.class,Group.class);</code></pre> <h3>&nbsp;5. 在Mapper类中定义用于创建group的工厂类。</h3> <pre><code class="language-java">//map类中定义 factory属性 private SimpleGroupFactory factory;  //setup初始化方法中创建SimpleGroupFactory factory = new SimpleGroupFactory(GroupWriteSupport.getSchema(context.getConfiguration()));</code></pre> <h3>6.map方法中创建group并赋值，写出。</h3> <pre><code class="language-java">            String[] strings = value.toString().split(" ");             //TODO 创建group             Group group = factory.newGroup();             //TODO 为group赋值             group.add("id",Integer.valueOf(strings[0]));             group.add("name",strings[1]);             //TODO 写出             mos.write("output",  null, group);</code></pre> <h2>代码</h2> <p>以下为完整代码</p> <pre><code class="language-java">package com.zixuan.hadoop;  import org.apache.hadoop.conf.Configuration; import org.apache.hadoop.conf.Configured; import org.apache.hadoop.fs.FileSystem; import org.apache.hadoop.fs.Path; import org.apache.hadoop.io.LongWritable; import org.apache.hadoop.io.NullWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Job; import org.apache.hadoop.mapreduce.Mapper; import org.apache.hadoop.mapreduce.lib.input.MultipleInputs; import org.apache.hadoop.mapreduce.lib.input.TextInputFormat; import org.apache.hadoop.mapreduce.lib.output.MultipleOutputs; import org.apache.hadoop.mapreduce.lib.output.LazyOutputFormat; import org.apache.hadoop.util.Tool; import org.apache.hadoop.util.ToolRunner; import org.apache.parquet.example.data.Group; import org.apache.parquet.example.data.simple.SimpleGroupFactory; import org.apache.parquet.hadoop.example.GroupWriteSupport; import org.apache.parquet.hadoop.example.ExampleOutputFormat; import org.apache.parquet.hadoop.metadata.CompressionCodecName; import org.apache.parquet.schema.MessageTypeParser;  import java.io.IOException; import java.util.Random;  public class MrSavedAsParquet extends Configured implements Tool {     public static void main(String[] args) throws Exception {         int ret = ToolRunner.run(new MrSavedAsParquet(), args);         System.exit(ret);     }      public int run(String[] strings) throws Exception {          String inputDir = "/user/hive/warehouse/inputdirTest";         String outputDir = "/user/hive/warehouse/ods.db/usertest";          //为parquet生成schema         String writeSchema = "message example {\n optional INT32 id;\n optional binary name (UTF8);\n}";          // 配置MR的configuration         Configuration configuration = new Configuration(this.getConf());         configuration.set("mapreduce.input.fileinputformat.split.minsize","2147483648");         configuration.set("parquet.example.schema",writeSchema);          Job job = new Job(configuration,"UserTest");         //配置parquet         ExampleOutputFormat.setSchema(job, MessageTypeParser.parseMessageType(writeSchema));         ExampleOutputFormat.setCompression(job, CompressionCodecName.SNAPPY);         ExampleOutputFormat.setOutputPath(job, new Path(outputDir));         //配置Job的基本信息         job.setJarByClass(MrSavedAsParquet.class);         job.setMapperClass(MapTest.class);         job.setInputFormatClass(TextInputFormat.class);         job.setMapOutputKeyClass(Text.class);         job.setMapOutputValueClass(Group.class);//TODO 设置value是parquet的Group          MultipleInputs.addInputPath(job,new Path(inputDir), TextInputFormat.class,MapTest.class);         job.setNumReduceTasks(0);          //TODO 设置输出格式是parquet         LazyOutputFormat.setOutputFormatClass(job, ExampleOutputFormat.class);         MultipleOutputs.addNamedOutput(job, "output", ExampleOutputFormat.class, NullWritable.class,Group.class);          FileSystem fileSystem = FileSystem.get(configuration);         if ( ! fileSystem.exists(new Path(inputDir))){             System.out.print("input path does not exist!");             return 1;         }          int ret = job.waitForCompletion(true) ? 0 : 1;           return ret;     }      public static class MapTest extends Mapper&lt;LongWritable, Text, NullWritable, Group&gt; {         // 多目录输出         private MultipleOutputs&lt;NullWritable, Group&gt; mos; // 多目录输出         //定义用于创建group的工厂类         private SimpleGroupFactory factory;          //初始化，创建mos和factory         @Override         public void setup(Context context) throws IOException, InterruptedException {             mos = new MultipleOutputs&lt;NullWritable,Group &gt;(context);// 初始化mos             factory = new SimpleGroupFactory(GroupWriteSupport.getSchema(context.getConfiguration()));         }          /*             LongWritable key是文件偏移量             Text value是每行的数据             Context context是上下文对象，可以获取conf中的配置项          */         @Override         public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {             String[] strings = value.toString().split(" ");             //TODO 创建group             Group group = factory.newGroup();             //TODO 为group赋值             group.add("id",Integer.valueOf(strings[0]));             group.add("name",strings[1]);             //TODO 写出             mos.write("output",  null, group);         }          @Override         protected void cleanup(Context context) throws IOException, InterruptedException {             mos.close();         }     } }</code></pre> <p>文件已经保存到/user/hive/warehouse/ods.db/usertest目录下，创建ods.usertest的hive表：</p> <pre><code class="language-sql">CREATE TABLE ods.usertest ( id   int, name string ) stored as parquet;</code></pre> <p>查询：</p> <pre><code class="language-bash">hive&gt; select * from ods.usertest; OK 1	xiaoming 2	hanmeimei 3	kangkang 4	maria 5	yokiko 6	michael Time taken: 0.053 seconds, Fetched: 6 row(s)</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-47960.htm">python2.7 之无解的yaml版本问题</a></p>
                                        <p>下一个：<a href="/news/article-48366.htm">Redis 主从同步原理解析</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-41046.htm" title="家养2个月小猫咬出血要紧吗视频（两个月的猫咬出血了需要打针吗）">家养2个月小猫咬出血要紧吗视频（两个月的猫咬出血了需要打针吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-28-free-ssr-subscribe.htm" title="「2月28日」最高速度22M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费订阅地址分享">「2月28日」最高速度22M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费订阅地址分享</a></li>
                        <li class="py-2"><a href="/news/article-58749.htm" title="JAVA多线程之同步容器&amp;并发容器">JAVA多线程之同步容器&amp;并发容器</a></li>
                        <li class="py-2"><a href="/news/article-62793.htm" title="宠物领养活动广告词大全（宠物领养广告文案）">宠物领养活动广告词大全（宠物领养广告文案）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-7-node-share-links.htm" title="「2月7日」最高速度20.3M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费订阅地址分享">「2月7日」最高速度20.3M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费订阅地址分享</a></li>
                        <li class="py-2"><a href="/news/article-64610.htm" title="动物医院怎么样赚钱快 动物医院怎么样赚钱快一点">动物医院怎么样赚钱快 动物医院怎么样赚钱快一点</a></li>
                        <li class="py-2"><a href="/news/article-61604.htm" title="合肥宠物寄养中心（合肥宠物寄养中心在哪里）">合肥宠物寄养中心（合肥宠物寄养中心在哪里）</a></li>
                        <li class="py-2"><a href="/news/article-60418.htm" title="宠物医院美团好评回复大全（宠物医院美团评价）">宠物医院美团好评回复大全（宠物医院美团评价）</a></li>
                        <li class="py-2"><a href="/news/article-55877.htm" title="宠物粮食创业（宠物粮食生意怎么样）">宠物粮食创业（宠物粮食生意怎么样）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-shadowrocket-node.htm" title="「1月6日」最高速度23M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费订阅地址分享">「1月6日」最高速度23M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费订阅地址分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End Features Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer" class="section-bg">
        <div class="container">
            <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                FreeShadowrocket免费机场官网 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End  Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/freeshadowrocket/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/aos/aos.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/freeshadowrocket/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/freeshadowrocket/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>